       title: "Music Library"
     package: "http://fake-audio.org/music-lib"
     version: "1.1"
 description: "This information model defines a library of audio tracks, organized by album, with associated metadata regarding each track. It is modeled on the types of library data maintained by common websites and music file tag editors."
     license: "CC0-1.0"
     exports: ["Library"]

Library = MapOf(Barcode, Album){1..*}                   // Top level of the library is a map of CDs by barcode

Barcode = String{pattern="^\d{12}$"}                    // A UPC-A barcode is 12 digits

Album = Record                                          // model for the album
   1 artist           Artist                            // artist associated with this album
   2 title            String                            // commonly known title for this album
   3 pub_data         Publication-Data                  // metadata about album publication
   4 tracks           Track [1..*]                      // individual track descriptions
   5 total_tracks     Integer{1..*}                     // total track count
   6 cover_art        Image optional                    // cover art image for this album

Publication-Data = Record                               // who and when of publication
   1 publisher        String                            // record label that released this album
   2 release_date     String /date                      // and when did they let this drop

Image = Record                                          // pretty picture for the album or track
   1 image_format     Image-Format                      // what type of image file?
   2 image_content    Binary                            // the image data in the identified format

Image-Format = Enumerated                               // can only be one, but can extend list
   1 PNG
   2 JPG
   3 GIF

Artist = Record                                         // interesting information about the performers
   1 artist_name      String                            // who is this person
   2 instruments      Instrument unique [1..*]          // and what do they play

Instrument = Enumerated                                 // collection of instruments (non-exhaustive)
   1 vocals
   2 guitar
   3 bass
   4 drums
   5 keyboards
   6 percussion
   7 brass
   8 woodwinds
   9 harmonica

Track = Record                                          // for each track there's a file with the audio and a metadata record
   1 location         File-Path                         // path to the audio file location in local storage
   2 metadata         TrackInfo                         // description of the track

TrackInfo = Record                                      // information about the individual audio tracks
   1 t_number         Number                            // track sequence number
   2 title            String                            // track title
   3 length           Integer{1..*}                     // length of track in seconds; anticipated user display is mm:ss
   4 audio_format     Audio-Format                      // the all important content
   5 featured_artist  Artist unique [0..*]              // important guest performers
   6 track_art        Image optional                    // track can have individual artwork
   7 genre            Genre

Audio-Format = Enumerated                               // can only be one, but can extend list
   1 MP3
   2 OGG
   3 FLAC
   4 MP4
   5 AAC
   6 WMA
   7 WAV

Genre = Enumerated                                      // Enumeration of common genres
   1 rock
   2 jazz
   3 hip_hop
   4 electronic
   5 folk_country_world
   6 classical

File-Path = String                                      // local storage location of file with directory path from root, filename, and extension
